Test 1: Test simple echo output

input:  "DzYibn13bQOSgW4XEfjFfD08LVO3AXG6b0AS30SeinNOQS61Zz44V6SY1cQRRiTq38YN4296ExSIV9pwwVop8Qy1LGMtQyLNg548Dj8wWQIUh0OzkCuKa6DKLRdWs95e2Bo"; exit
output: DzYibn13bQOSgW4XEfjFfD08LVO3AXG6b0AS30SeinNOQS61Zz44V6SY1cQRRiTq38YN4296ExSIV9pwwVop8Qy1LGMtQyLNg548Dj8wWQIUh0OzkCuKa6DKLRdWs95e2Bo

DONE!!!

Test 2: Test echo with options

input: "TM0dRGgUenQO7IugMZHL920bsPOD3GVF4H7NVbAtSferTxcCoiUoLK8CtZ5CIAddwQvYoAruJiz71infiziSMXdDngkBQlNbHrizBD7BPNpzAJ4p"; exit
output: TM0dRGgUenQO7IugMZHL920bsPOD3GVF4H7NVbAtSferTxcCoiUoLK8CtZ5CIAddwQvYoAruJiz71infiziSMXdDngkBQlNbHrizBD7BPNpzAJ4p

DONE!!!

Test 3: Test echo with escape sequences

input: echo -e "\t \v \a MwdFmFpmm \v \twwimyHu8qA \a"
output:             MwdFmFpmm         wwimyHu8qA 

Test 4: Test which

input:
output: exit: ush built-in command

DONE!!!

Test 5: Test which with options

input:
output: echo: ush built-in command

DONE!!!

Test 6: Test which with options2

input:
output: asdasdasdasdsa not found
> 1

DONE!!!

Test 7: Test which with options3

input:
output: echo: ush built-in command
> 0

DONE!!!

Test 10: Test cd + pwd with a root

input: /private/var/folders/b6
output: /private/var/folders/b6/wn3pmgnn0p579l0h4vsl2l0h0000gp/T/tmpllhf8guv

Test 12: Test cd + pwd with options

input: /private/tmp
output: /tmp

Test 14: Test simple command substitution

input: echo "$(pwd)"
output: /private/var/folders/rw/v1w1l5bd4bn0sr30kn4nkvgc0000gp/T/tmpy_ljo0ro

Test 15: Test complicated command substitution

input: echo "Hello, $(whoami)! $(echo "Hello, $(whoami)")"
output: Hello, oracle! Hello, oracle

Test 16: Test complicated command substitution2

input: echo "$(echo $(pwd))"
output: /private/var/folders/rw/v1w1l5bd4bn0sr30kn4nkvgc0000gp/T/tmpy_ljo0ro

Test 17: Test work with shell variables

input: echo ${SHLVL} ${HOME} ${LOGNAME} ${USR} ${TERM}
output: 2 /Users/oracle oracle

Test 18: Test tilde expansion

input: /private/var/folders/rw/v1w1l5bd4bn0sr30kn4nkvgc0000gp/T/tmpy_ljo0ro/user_repo
output: /Users/oracle

Test 19: Test work with shell variables2

input:
output: location p2p cbl

Test 20: Test work with shell variables3

input:< $UNIT $UFK $ucode
< $UNIT $UFK $ucode
output: location p2p cbl


